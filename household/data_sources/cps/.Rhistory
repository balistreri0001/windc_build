cps_nongovtran = subset(cps_totals, source %in% c("hcspval","hfinval","hoival")) %>%
group_by(year) %>% summarize(cps = sum(cps))
nipa_cps_nongovtran = subset(beadata, LineNumber %in% "24") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(cps_nongovtran) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "non-government transfer income")
nipa_cps = rbind(nipa_cps_totinc, nipa_cps_wages,nipa_cps_farm, nipa_cps_nonfarm,
nipa_cps_rent, nipa_cps_interest, nipa_cps_div,
nipa_cps_socsec, nipa_cps_uc, nipa_cps_vet,
nipa_cps_othtran, nipa_cps_nongovtran)
nipa_cps_totinc
nipa_cps_totinc = subset(beadata, LineNumber %in% "1") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "htotval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "total income") %>%
select(-source)
nipa_cps_totinc
nipa_cps_othtran
cps_totals = subset(income, r %in% "US") %>%
group_by(year,source) %>%
summarize(cps = sum(value))
# link cps categories and nipa accounts
# [1] "Personal income"
#     "htotval"
nipa_cps_totinc = subset(beadata, LineNumber %in% "1") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "htotval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "total income") %>%
select(-source)
# 	[2] "Compensation of employees"
# 		[3] "Wages and salaries"
#         "hwsval"
nipa_cps_wages = subset(beadata, LineNumber %in% "3") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hwsval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "wages and salaries") %>%
select(-source)
# 			[4] "Private industries"
# 			[5] "Government"
# 		[6] "Supplements to wages and salaries"
# 			[7] "Employer contributions for employee pension and insurance funds"
# 			[8] "Employer contributions for government social insurance"
# 	[9] "Proprietors' income with inventory valuation and capital consumption adjustments"
# 		[10] "Farm"
#          "hfrval"
nipa_cps_farm = subset(beadata, LineNumber %in% "10") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hfrval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "proprietor's income: farm") %>%
select(-source)
# 		[11] "Nonfarm"
#          "hseval"
nipa_cps_nonfarm = subset(beadata, LineNumber %in% "11") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hseval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "proprietor's income: non-farm") %>%
select(-source)
# 	[12] "Rental income of persons with capital consumption adjustment"
#        "hrntval"
nipa_cps_rent = subset(beadata, LineNumber %in% "12") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hrntval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "rental income") %>%
select(-source)
# 	[13] "Personal income receipts on assets"
# 		[14] "Personal interest income"
#          "hintval"
nipa_cps_interest = subset(beadata, LineNumber %in% "14") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hintval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "personal interest income") %>%
select(-source)
# 		[15] "Personal dividend income"
#          "hdivval"
nipa_cps_div = subset(beadata, LineNumber %in% "15") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hdivval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "personal divident income") %>%
select(-source)
# 	[16] "Personal current transfer receipts"
# 		[17] "Government social benefits to persons"
# 	    [18] "Social security"
#            "hssval","hssival","hdisval"
cps_socsec = subset(cps_totals, source %in% c("hssval","hssival","hdisval")) %>%
group_by(year) %>% summarize(cps = sum(cps))
nipa_cps_socsec = subset(beadata, LineNumber %in% "18") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(cps_socsec) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "government benefits: social security")
# 		  [19] "Medicare"
# 		  [20] "Medicaid"
# 		  [21] "Unemployment insurance"
#            "hucval"
nipa_cps_uc = subset(beadata, LineNumber %in% "21") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hucval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "government benefits: unemployment insurance") %>%
select(-source)
# 		  [22] "Veterans' benefits"
#            "hvetval"
nipa_cps_vet = subset(beadata, LineNumber %in% "22") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(subset(cps_totals, source %in% "hvetval")) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "government benefits: veterans' benefits") %>%
select(-source)
# 		  [23] "Other"
#            "hwcval","hpawval","hsurval","hedval",
cps_othtran = subset(cps_totals, source %in% c("hwcval","hpawval","hsurval","hedval")) %>%
group_by(year) %>% summarize(cps = sum(cps))
nipa_cps_othtran = subset(beadata, LineNumber %in% "23") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(cps_othtran) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "government benefits: other")
# 	  [24] "Other current transfer receipts, from business (net)"
#          "hcspval","hfinval","hoival"
cps_nongovtran = subset(cps_totals, source %in% c("hcspval","hfinval","hoival")) %>%
group_by(year) %>% summarize(cps = sum(cps))
nipa_cps_nongovtran = subset(beadata, LineNumber %in% "24") %>%
rename("nipa"="value","desc"="LineDescription") %>%
select(year,nipa) %>%
mutate(nipa = nipa * 1e6) %>%
left_join(cps_nongovtran) %>%
mutate(pct_diff = 100 * (cps / nipa - 1),
category = "non-government transfer income")
# plot differences
nipa_cps = rbind(nipa_cps_totinc, nipa_cps_wages,nipa_cps_farm, nipa_cps_nonfarm,
nipa_cps_rent, nipa_cps_interest, nipa_cps_div,
nipa_cps_socsec, nipa_cps_uc, nipa_cps_vet,
nipa_cps_othtran, nipa_cps_nongovtran)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="WiNDC vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA",
subtitle="Difference in capital income -- foreign capital ownership, capital gains.") +
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff),position="dodge",stat="identity",color="black")+
#   scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
facet_wrap(~category, ncol=4, scales="fixed")+
#   guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
p = ggplot(nipa_windc)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="WiNDC vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA",
subtitle="Difference in capital income -- foreign capital ownership, capital gains.") +
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("windc_vs_nipa_income_categories.png"),device="png",width=50,
height=60, limitsize=FALSE)
ggsave(file.path("windc_vs_nipa_income_categories.png"),device="png",width=10,
height=6, limitsize=FALSE)
View(nipa_windc)
p = ggplot(subset(nipa_windc, !(windc %in% NA)))+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="WiNDC vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA",
subtitle="Difference in capital income -- foreign capital ownership, capital gains.") +
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
p = ggplot(subset(nipa_windc, !(windc %in% NA)))+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="WiNDC vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA",
subtitle="Difference in capital income -- foreign capital ownership, capital gains.") +
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("windc_vs_nipa_income_categories.png"),device="png",width=10,
height=6, limitsize=FALSE)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
facet_wrap(~category, ncol=4, scales="fixed")+
#   guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
nipa_cps = rbind(nipa_cps_totinc, nipa_cps_wages,nipa_cps_farm, nipa_cps_nonfarm,
nipa_cps_rent, nipa_cps_interest, nipa_cps_div,
nipa_cps_socsec, nipa_cps_uc, nipa_cps_vet,
nipa_cps_othtran, nipa_cps_nongovtran)
View(nipa_cps)
nipa_cps$category = factor(nipa_cps$category)
nipa_cps$year = factor(nipa_cps$year)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
facet_wrap(~category, ncol=4, scales="fixed")+
#   guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
facet_wrap(~category, ncol=4, scales="fixed")+
#   guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_vs_nipa_income_categories.png"),device="png",width=10,
height=8, limitsize=FALSE)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
facet_wrap(~category, ncol=4, scales="fixed")+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_vs_nipa_income_categories.png"),device="png",width=10,
height=8, limitsize=FALSE)
ggsave(file.path("cps_vs_nipa_income_categories.png"),device="png",width=10,
height=6, limitsize=FALSE)
unique(nipa_cps$category)
nipa_cps$category = factor(nipa_cps$category,
levels = unique(nipa_cps$category))
nipa_cps$year = factor(nipa_cps$year)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
facet_wrap(~category, ncol=4, scales="fixed")+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
guides(fill=guide_legend(title="Income Category",reverse=TRUE))+
facet_wrap(~category, ncol=4, scales="fixed")+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
axis.text.x      = element_text(angle=90),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_vs_nipa_income_categories.png"),device="png",width=12,
height=6, limitsize=FALSE)
ggsave(file.path("cps_vs_nipa_income_categories.png"),device="png",width=14,
height=6, limitsize=FALSE)
p = ggplot(nipa_cps)+
geom_bar(aes(x=year,y=pct_diff,fill=category),position="dodge",stat="identity",color="black")+
scale_fill_brewer(palette="Set3") +
labs(title="CPS vs. NIPA: Aggregate Income Categories",
x="Year",y="% Difference from NIPA")+
guides(fill=guide_legend(title="Income Category",reverse=FALSE))+
facet_wrap(~category, ncol=4, scales="fixed")+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
axis.text.x      = element_text(angle=90),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_vs_nipa_income_categories.png"),device="png",width=14,
height=6, limitsize=FALSE)
cps.vars.plot = rbind(
c("hwsval","wages and salaries"),
c("hseval","self-employment (nonfarm)"),
c("hfrval","self-employment farm"),
c("hucval","unemployment compensation"),
c("hwcval","workers compensation"),
c("hssval","social security"),
c("hssival","supplemental security"),
c("hpawval","public assistance or welfare"),
c("hvetval","veterans benefits"),
c("hsurval","survivors income"),
c("hdisval","disability"),
c("hretval","retirement income"),
c("hdstval","retirement distributions"),
c("hpenval","pension income"),
c("hannval","annuities"),
c("hintval","interest"),
c("hdivval","dividends"),
c("hrntval","rents"),
c("hedval","educational assistance"),
c("hcspval","child support"),
c("hfinval","financial assistance"),
c("hoival","other income"),
c("htotval","total household income"))
cps.vars.plot = data.frame(
source=cps.vars.plot[,1],
description=cps.vars.plot[,2],
stringsAsFactors=FALSE)
## add the income source descriptions
shares_plot = left_join(shares,cps.vars.plot,by="source")
## set the ordering for the plot
shares_plot$description = factor(shares_plot$description,
rev(cps.vars.plot$description))
shares_plot$year = factor(shares_plot$year)
categories <- factor(c("hh1","hh2","hh3","hh4","hh5"))
shares_plot$hh = factor(shares_plot$hh,rev(levels(categories)))
shares_plot$r = factor(shares_plot$r)
state_shares <- subset(shares_plot, !(r %in% "US"))
nation_shares <- subset(shares_plot, (r %in% "US"))
p = ggplot(state_shares)+
geom_bar(aes(y=r,x=value,fill=hh),stat="identity")+
scale_fill_brewer(palette="Set3") +
facet_grid(year~description, scales="free") +
labs(y="State",x="Share of Total") +
#  xlim(0,1) +
guides(fill=guide_legend(title="Household Categories",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_asec_income_shares_state.png"),device="png",width=50,
height=60, limitsize=FALSE)
p = ggplot(nation_shares)+
geom_bar(aes(y=year,x=value,fill=hh),stat="identity")+
facet_wrap(~description,nrow=4) +
scale_fill_brewer(palette="Set3") +
labs(y="years",x="Share of Total") +
#   xlim(0,1.1) +
guides(fill=guide_legend(title="Household Categories",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_asec_income_shares_nation.png"),device="png",width=20,
height=15)
count_plot <- count
## characterize factors
categories <- factor(c("hh1","hh2","hh3","hh4","hh5"))
count_plot$hh = factor(count_plot$hh,rev(levels(categories)))
count_plot$r = factor(count_plot$r)
count_plot$year = factor(count_plot$year)
state_count <- subset(count_plot, !(r %in% "US"))
nation_count <- subset(count_plot, (r %in% "US"))
p = ggplot(state_count)+
geom_bar(aes(y=r,x=n,fill=hh),stat="identity")+
scale_fill_brewer(palette="Set3") +
labs(y="State",x="Number of Observations") +
facet_wrap(~year,nrow=1) +
guides(fill=guide_legend(title="Quintile",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_asec_countobs_state.png"),device="png",width=25,
height=20)
p = ggplot(nation_count)+
geom_bar(aes(y=year,x=n,fill=hh),stat="identity")+
scale_fill_brewer(palette="Set3") +
labs(y="Year",x="N") +
guides(fill=guide_legend(title="Quintiles",reverse=TRUE))+
theme(axis.line.x      = element_line(colour="black"),
axis.line.y      = element_line(colour="black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border     = element_blank(),
panel.background = element_blank(),
legend.box.just  = "left",
legend.key       = element_blank())
print(p)
ggsave(file.path("cps_asec_countobs_nation.png"),device="png",width=12,
height=8)
head(nipa_windc)
write.csv(nipa_windc,"windc_vs_nipa_income_categories.csv",row.names=FALSE)
head(nipa_cps)
write.csv(nipa_cps,"cps_vs_nipa_income_categories.csv",row.names=FALSE)
