# set working directory
setwd("~/git/windc_build/household/added_data")
# install needed packages
list.of.packages <-
c("tidyverse","cpsR")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos = "http://cran.rstudio.com/")
lapply(list.of.packages, library, character.only = TRUE)
cps.key = "a69b1c9f95e30d420fcef94d191d649a340ca7f3"
cps.vars = c("hwsval",  # "wages and salaries"
"hseval",  # "self-employment (nonfarm)"
"hfrval",  # "self-employment farm"
"hucval",  # "unemployment compensation"
"hwcval",  # "workers compensation"
"hssval",  # "social security"
"hssival", # "supplemental security"
"hpawval", # "public assistance or welfare"
"hvetval", # "veterans benefits"
"hsurval", # "survivors income"
"hdisval", # "disability"
"hretval", # "retirement income"
"hintval", # "interest"
"hdivval", # "dividends"
"hrntval", # "rents"
"hedval",  # "educational assistance"
"hcspval", # "child support"
"hfinval", # "financial assistance"
"hoival",  # "other income"
"htotval") # "total household income
asec2017 <- get_asec(2017, vars = cpsvars, key = cps.key, tibble=FALSE)
asec2017 <- get_asec(2017, vars = cps.vars, key = cps.key, tibble=FALSE)
View(asec2017)
list.of.packages <-
c("tidyverse","cpsR","survey")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos = "http://cran.rstudio.com/")
lapply(list.of.packages, library, character.only = TRUE)
# ------------------------------------------------------------------------------
# pull in cps data
# ------------------------------------------------------------------------------
## pick income upper bounds for categories to generate population information
bounds = c(25000, 50000, 75000, 150000, Inf)
cps.key = "a69b1c9f95e30d420fcef94d191d649a340ca7f3"
cps.vars = c("hwsval",  # "wages and salaries"
"hseval",  # "self-employment (nonfarm)"
"hfrval",  # "self-employment farm"
"hucval",  # "unemployment compensation"
"hwcval",  # "workers compensation"
"hssval",  # "social security"
"hssival", # "supplemental security"
"hpawval", # "public assistance or welfare"
"hvetval", # "veterans benefits"
"hsurval", # "survivors income"
"hdisval", # "disability"
"hretval", # "retirement income"
"hintval", # "interest"
"hdivval", # "dividends"
"hrntval", # "rents"
"hedval",  # "educational assistance"
"hcspval", # "child support"
"hfinval", # "financial assistance"
"hoival",  # "other income"
"htotval", # "total household income
# added variables for weighting
"a_exprrp",
"h_hhtype",
"pppos")
asec2017 <- get_asec(2017, vars = cps.vars, key = cps.key, tibble=FALSE)
cps.vars = c("hwsval",  # "wages and salaries"
"hseval",  # "self-employment (nonfarm)"
"hfrval",  # "self-employment farm"
"hucval",  # "unemployment compensation"
"hwcval",  # "workers compensation"
"hssval",  # "social security"
"hssival", # "supplemental security"
"hpawval", # "public assistance or welfare"
"hvetval", # "veterans benefits"
"hsurval", # "survivors income"
"hdisval", # "disability"
"hretval", # "retirement income"
"hintval", # "interest"
"hdivval", # "dividends"
"hrntval", # "rents"
"hedval",  # "educational assistance"
"hcspval", # "child support"
"hfinval", # "financial assistance"
"hoival",  # "other income"
"htotval", # "total household income
# added variables for weighting
"a_exprrp",
"h_hhtype",
"pppos",
"marsupwt")
asec2017 <- get_asec(2017, vars = cps.vars, key = cps.key, tibble=FALSE)
asec2017 = asec2017[asec2017$a_exprrp %in% c(1,2) & asec2017$h_hhtype==1,]
unique(asec2017$pppos)
## extract the household file with representative persons
asec2017 = asec2017[asec2017$pppos==41]
## extract the household file with representative persons
asec2017 = asec2017[asec2017$pppos==41,]
svy = svrepdesign(data=asec2017,weight=~marsupwt,repweights='pwwgt[0-9]+',
type='JK1',scale=4/60,rscales=rep(1, 161),mse=TRUE)
# add lower bound
bounds = c(-Inf,bounds)
for (i in 1:length(bounds))
asec2017$hh[asec2017$htotval>bounds[i] &
asec2017$htotval<=bounds[i+1]] = paste0("hh",i)
for (source in cps.vars)
asec2017[,source] = asec2017[,source]*asec2017$marsupwt
cps.vars = c("hwsval",  # "wages and salaries"
"hseval",  # "self-employment (nonfarm)"
"hfrval",  # "self-employment farm"
"hucval",  # "unemployment compensation"
"hwcval",  # "workers compensation"
"hssval",  # "social security"
"hssival", # "supplemental security"
"hpawval", # "public assistance or welfare"
"hvetval", # "veterans benefits"
"hsurval", # "survivors income"
"hdisval", # "disability"
"hretval", # "retirement income"
"hintval", # "interest"
"hdivval", # "dividends"
"hrntval", # "rents"
"hedval",  # "educational assistance"
"hcspval", # "child support"
"hfinval", # "financial assistance"
"hoival",  # "other income"
"htotval", # "total household income
# added variables for weighting
"gestfips",
"a_exprrp",
"h_hhtype",
"pppos",
"marsupwt")
asec2017 <- get_asec(2017, vars = cps.vars, key = cps.key, tibble=FALSE)
# extract the household file with representative persons
asec2017 = asec2017[asec2017$a_exprrp %in% c(1,2) & asec2017$h_hhtype==1,]
## extract the household file with representative persons
asec2017 = asec2017[asec2017$pppos==41,]
## survey design based on the replicate weights
# svy = svrepdesign(data=asec2017,weight=~marsupwt,repweights='pwwgt[0-9]+',
#                   type='JK1',scale=4/60,rscales=rep(1, 161),mse=TRUE)
## add lower bound
bounds = c(-Inf,bounds)
## add household label to each entry
for (i in 1:length(bounds))
asec2017$hh[asec2017$htotval>bounds[i] &
asec2017$htotval<=bounds[i+1]] = paste0("hh",i)
## scale income levels by the household weight
for (source in cps.vars)
asec2017[,source] = asec2017[,source]*asec2017$marsupwt
count <- asec2017[,c("gestfips","hh")] %>% count(hh,gestfips)
names(count)[2] <- "state"
nat_count <- asec2017[,c("gestfips","hh")] %>% count(hh)
nat_count$state <- 0
nat_count <- nat_count[,names(count)]
count <- rbind(nat_count,count)
View(count)
bounds = c(25000, 50000, 75000, 150000, Inf)
# cps api key
cps.key = "a69b1c9f95e30d420fcef94d191d649a340ca7f3"
# income variables
cps.vars = c("hwsval",  # "wages and salaries"
"hseval",  # "self-employment (nonfarm)"
"hfrval",  # "self-employment farm"
"hucval",  # "unemployment compensation"
"hwcval",  # "workers compensation"
"hssval",  # "social security"
"hssival", # "supplemental security"
"hpawval", # "public assistance or welfare"
"hvetval", # "veterans benefits"
"hsurval", # "survivors income"
"hdisval", # "disability"
"hretval", # "retirement income"
"hintval", # "interest"
"hdivval", # "dividends"
"hrntval", # "rents"
"hedval",  # "educational assistance"
"hcspval", # "child support"
"hfinval", # "financial assistance"
"hoival",  # "other income"
"htotval") # "total household income
# added variables for weighting
cps.rw =   c("gestfips", # state fips
"a_exprrp", # ?
"h_hhtype", # ?
"pppos",    # ?
"marsupwt") # ?
bounds = c(25000, 50000, 75000, 150000, Inf)
# cps api key
cps.key = "a69b1c9f95e30d420fcef94d191d649a340ca7f3"
# income variables
cps.vars = c("hwsval",  # "wages and salaries"
"hseval",  # "self-employment (nonfarm)"
"hfrval",  # "self-employment farm"
"hucval",  # "unemployment compensation"
"hwcval",  # "workers compensation"
"hssval",  # "social security"
"hssival", # "supplemental security"
"hpawval", # "public assistance or welfare"
"hvetval", # "veterans benefits"
"hsurval", # "survivors income"
"hdisval", # "disability"
"hretval", # "retirement income"
"hintval", # "interest"
"hdivval", # "dividends"
"hrntval", # "rents"
"hedval",  # "educational assistance"
"hcspval", # "child support"
"hfinval", # "financial assistance"
"hoival",  # "other income"
"htotval") # "total household income
# added variables for weighting
cps.rw =   c("gestfips", # state fips
"a_exprrp", # ?
"h_hhtype", # ?
"pppos",    # ?
"marsupwt") # ?
# dowload dataset
asec2017 <- get_asec(2017, vars = c(cps.vars,cps.rw), key = cps.key, tibble=FALSE)
asec2017 = asec2017[asec2017$a_exprrp %in% c(1,2) & asec2017$h_hhtype==1,]
## extract the household file with representative persons
asec2017 = asec2017[asec2017$pppos==41,]
## survey design based on the replicate weights
# svy = svrepdesign(data=asec2017,weight=~marsupwt,repweights='pwwgt[0-9]+',
#                   type='JK1',scale=4/60,rscales=rep(1, 161),mse=TRUE)
## add lower bound
bounds = c(-Inf,bounds)
## add household label to each entry
for (i in 1:length(bounds))
asec2017$hh[asec2017$htotval>bounds[i] &
asec2017$htotval<=bounds[i+1]] = paste0("hh",i)
## scale income levels by the household weight
for (source in cps.vars)
asec2017[,source] = asec2017[,source]*asec2017$marsupwt
## count observations in sample by quantile and state fips
count <- asec2017[,c("gestfips","hh")] %>% count(hh,gestfips)
names(count)[2] <- "state"
nat_count <- asec2017[,c("gestfips","hh")] %>% count(hh)
nat_count$state <- 0
nat_count <- nat_count[,names(count)]
count <- rbind(nat_count,count)
nat_income = aggregate(asec2017[,cps.vars],by=list(hh=asec2017$hh),sum)
nat_income$state = 0
nat_income = nat_income[,names(income)]
income = aggregate(asec2017[,cps.vars],by=list(hh=asec2017$hh,state=asec2017$gestfips),sum)
nat_income = aggregate(asec2017[,cps.vars],by=list(hh=asec2017$hh),sum)
nat_income$state = 0
nat_income = nat_income[,names(income)]
income = rbind(nat_income,income)
View(income)
hares <- data.frame(income %>% group_by(state) %>% mutate_at(vars(-group_cols(),-hh),funs(./sum(.))))
## convert income by quantile to share of total by state and quantile
shares <- data.frame(income %>% group_by(state) %>% mutate_at(vars(-group_cols(),-hh),funs(./sum(.))))
View(shares)
## shift from wide to long format
income = gather_(income,"source","value",cps.vars)
shares = gather_(shares,"source","share",cps.vars)
income$year = 2017
shares$year = 2017
count$year = 2017
fips <- data.frame(
state = c("0","1","2","4","5","6","8","9","10","11","12","13","15","16","17",
"18","19","20","21","22","23","24","25","26","27","28","29","30",
"31","32","33","34","35","36","37","38","39","40","41","42","44",
"45","46","47","48","49","50","51","53","54","55","56"),
sname = c("united states","alabama","alaska","arizona","arkansas","california",
"colorado","connecticut","delaware","district of columbia","florida",
"georgia","hawaii","idaho","illinois","indiana","iowa","kansas",
"kentucky","louisiana","maine","maryland","massachusetts","michigan",
"minnesota","mississippi","missouri","montana","nebraska","nevada",
"new hampshire","new jersey","new mexico","new york","north carolina",
"north dakota","ohio","oklahoma","oregon","pennsylvania","rhode island",
"south carolina","south dakota","tennessee","texas","utah","vermont",
"virginia","washington","west virginia","wisconsin","wyoming"))
year = 2017
# dowload dataset
cpsasec <- get_asec(year, vars = c(cps.vars,cps.rw), key = cps.key, tibble=FALSE)
# extract the household file with representative persons
cpsasec = cpsasec[cpsasec$a_exprrp %in% c(1,2) & cpsasec$h_hhtype==1,]
# extract the household file with representative persons
cpsasec = cpsasec[cpsasec$pppos==41,]
svy = svrepdesign(data=cpsasec,weight=~marsupwt,repweights='pwwgt[0-9]+',
type='JK1',scale=4/60,rscales=rep(1, 161),mse=TRUE)
# add lower bound
bounds = c(-Inf,bounds)
# add household label to each entry
for (i in 1:length(bounds))
cpsasec$hh[cpsasec$htotval>bounds[i] &
cpsasec$htotval<=bounds[i+1]] = paste0("hh",i)
# scale income levels by the household weight
for (source in cps.vars)
cpsasec[,source] = cpsasec[,source]*cpsasec$marsupwt
# count observations in sample by quantile and state fips
count <- cpsasec[,c("gestfips","hh")] %>% count(hh,gestfips)
names(count)[2] <- "state"
nat_count <- cpsasec[,c("gestfips","hh")] %>% count(hh)
nat_count$state <- 0
nat_count <- nat_count[,names(count)]
count <- rbind(nat_count,count)
# aggregate income by quantile and state fips
income = aggregate(cpsasec[,cps.vars],by=list(hh=cpsasec$hh,state=cpsasec$gestfips),sum)
nat_income = aggregate(cpsasec[,cps.vars],by=list(hh=cpsasec$hh),sum)
nat_income$state = 0
nat_income = nat_income[,names(income)]
income = rbind(nat_income,income)
year = 2017
# dowload dataset
cpsasec <- get_asec(year, vars = c(cps.vars,cps.rw), key = cps.key, tibble=FALSE)
# extract the household file with representative persons
cpsasec = cpsasec[cpsasec$a_exprrp %in% c(1,2) & cpsasec$h_hhtype==1,]
# extract the household file with representative persons
cpsasec = cpsasec[cpsasec$pppos==41,]
# survey design based on the replicate weights
# svy = svrepdesign(data=cpsasec,weight=~marsupwt,repweights='pwwgt[0-9]+',
#                   type='JK1',scale=4/60,rscales=rep(1, 161),mse=TRUE)
# add lower bound
bounds = c(-Inf,bounds)
# add household label to each entry
for (i in 1:length(bounds))
cpsasec$hh[cpsasec$htotval>bounds[i] &
cpsasec$htotval<=bounds[i+1]] = paste0("hh",i)
# scale income levels by the household weight
for (source in cps.vars)
cpsasec[,source] = cpsasec[,source]*cpsasec$marsupwt
# count observations in sample by quantile and state fips
count <- cpsasec[,c("gestfips","hh")] %>% count(hh,gestfips)
names(count)[2] <- "state"
nat_count <- cpsasec[,c("gestfips","hh")] %>% count(hh)
nat_count$state <- 0
nat_count <- nat_count[,names(count)]
count <- rbind(nat_count,count)
# aggregate income by quantile and state fips
income = aggregate(cpsasec[,cps.vars],by=list(hh=cpsasec$hh,state=cpsasec$gestfips),sum)
nat_income = aggregate(cpsasec[,cps.vars],by=list(hh=cpsasec$hh),sum)
nat_income$state = 0
nat_income = nat_income[,names(income)]
income = rbind(nat_income,income)
# convert income by quantile to share of total by state and quantile
shares <- data.frame(income %>% group_by(state,hh) %>%
mutate_at(vars(-group_cols()),funs(./sum(.))))
shares <- data.frame(income %>% group_by(state,hh) %>%
mutate_at(vars(-group_cols()), ./sum(.)))
comp.shares <- function(x, na.rm = TRUE) (x/htotval)
shares <- data.frame(income %>% group_by(state,hh) %>%
mutate_at(vars(-group_cols()), comp.shares)
)
colnames(income)
